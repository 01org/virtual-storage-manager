
controller_service="mysql rabbitmq keystone vsm_api vsm_conductor vsm_scheduler http"
storage_node_service="vsm_agent vsm_physical"

function __check_controller_services() {
	count=0
	path="$RESULT_DIC"/"$CONT_RESULT_FILE_NAME"
	echo "====================     Check Services Result    ====================" >> $path
	echo "-----check controller services-----" >> $path
	for i in $controller_service
	do
		check_"$i"_status $path
	done
	
	if [ $count == 0 ]; then
		echo "-----All the services are OK and running-----" >> $path
	else
		echo "-----There are $count services are not running correctlly-----" >> $path
	fi

	echo -e "\n" >> $path
}

function __check_storage_node_services() {
	count=0
	path="$RESULT_DIC"/"$1""_result"
	echo "====================     Check Services Result    ====================" >> $path
	echo "-----check storage node services-----" >> $path
	for j in $storage_node_service
	do
		check_"$j"_status $1 $path
	done
	
	if [ $count == 0 ]; then
		echo "-----All the services are OK and running-----" >> $path
	else
		echo "-----There are $count services are not running correctlly-----" >> $path
	fi

	echo -e "\n" >> $path
}

function check_mysql_status() {
	mysql_status_value=`systemctl status mariadb.service|grep running|wc -l`+`systemctl status mariadb.service|grep "not running"|wc -l`
	if [ $mysql_status_value == "1+0" ]; then
		echo "[info]: mysql is running" >> $1
	else
		let count=$count+1
		echo -e "[error]: mysql is not running\n" >> $1
	fi
}

function check_rabbitmq_status() {
	rabbitmq_status_value=`systemctl status rabbitmq-server.service|grep running|wc -l`+`systemctl status rabbitmq-server.service|grep "not running"|wc -l`
	if [ $rabbitmq_status_value == "1+0" ]; then
		echo "[info]: rabbitmq-server is running" >> $1
	else
		let count=$count+1
		echo -e "[error]: rabbitmq-server is not running\n" >> $1
	fi
}

function check_keystone_status() {
	keystone_status_value=`systemctl status openstack-keystone.service|grep running|wc -l`+`systemctl status openstack-keystone.service|grep "not running"|wc -l`
	if [ $keystone_status_value == "1+0" ]; then
		echo "[info]: openstack-keystone is running" >> $1
	else
		let count=$count+1
		echo -e "[error]: openstack-keystone is not running\n" >> $1
	fi
}

function check_vsm_api_status() {
	vsm_api_status_value=`systemctl status vsm-api.service|grep running|wc -l`+`systemctl status vsm-api.service|grep "not running"|wc -l`
	if [ $vsm_api_status_value == "1+0" ]; then
		echo "[info]: vsm-api is running" >> $1
	else
		let count=$count+1
		echo -e "[error]: vsm-api is not running\n" >> $1
	fi
}

function check_vsm_conductor_status() {
	vsm_conductor_status_value=`systemctl status vsm-conductor.service|grep running|wc -l`+`systemctl status vsm-conductor.service|grep "not running"|wc -l`
	if [ $vsm_conductor_status_value == "1+0" ]; then
		echo "[info]: vsm-conductor is running" >> $1
	else
		let count=$count+1
		echo -e "[error]: vsm-conductor is not running\n" >> $1
	fi
}

function check_vsm_scheduler_status() {
	vsm_scheduler_status=`systemctl status vsm-scheduler.service|grep running|wc -l`+`systemctl status vsm-scheduler.service|grep "not running"|wc -l`
	if [ $vsm_scheduler_status == "1+0" ]; then
		echo "[info]: vsm-scheduler is running" >> $1
	else
		let count=$count+1
		echo -e "[error]: vsm-scheduler is not running\n" >> $1
	fi
}

function check_http_status() {
	http_status_value=`systemctl status httpd.service|grep running|wc -l`+`systemctl status httpd.service|grep "not running"|wc -l`
	if [ $http_status_value == "1+0" ]; then
		echo "[info]: httpd is running" >> $1
	else
		let count=$count+1
		echo -e "[error]: httpd is not running\n" >> $1
	fi
}

function check_vsm_agent_status() {
	vsm_agent_status_value=`ssh "$1" "systemctl status vsm-agent.service|grep running|wc -l" 2>/dev/null`+`ssh "$1" "systemctl status vsm-agent.service|grep \"not running\"|wc -l" 2>/dev/null`
	if [ $vsm_agent_status_value == "1+0" ]; then
		echo "[info]: vsm-agent is running" >> $2
	else
		let count=$count+1
		echo -e "[error]: vsm-agent is not running, ip address is: $1\n" >> $2
	fi
}

function check_vsm_physical_status() {
	vsm_physical_status_value=`ssh "$1" "systemctl status vsm-physical.service|grep running|wc -l" 2>/dev/null`+`ssh "$1" "systemctl status vsm-physical.service|grep \"not running\"|wc -l" 2>/dev/null`
	if [ $vsm_physical_status_value == "1+0" ]; then
		echo "[info]: vsm-physical is running" >> $2
	else
		let count=$count+1
		echo -e "[error]: vsm-physical is not running, ip address is: $1\n" >> $2
	fi
}


function check_services() {
	__check_controller_services

	for host in $HOST_LIST
	do
		__check_storage_node_services $host
	done

}


# change_log
# Jan 21 2015 Zhu Boxiang <boxiangx.zhu@intel.com> - 2015.1.21-1
# Initial release
#
