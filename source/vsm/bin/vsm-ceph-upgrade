#!/bin/bash

# Copyright 2014 Intel Corporation, All Rights Reserved.

# Licensed under the Apache License, Version 2.0 (the"License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#  http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the

set -e
set -o xtrace


#---------------------------------------------
# Usage
#---------------------------------------------

function usage() {
    cat << EOF
Usage: vsm-ceph-upgrade

for example:
    Step 1 get pakages needed by ceph upgrading in controller node: vsm-ceph-upgrade -p http://ceph.com/debian-hammer/ -k https://ceph.com/git/?p=ceph.git;a=blob_plain;f=keys/release.asc --proxy http://proxy-shz.intel.com:911
    Step 2 upgrade ceph in agent nodes:vsm-ceph-upgrade
Options:
  --help | -h
    Print usage information.
  --pkg_url | -p
    pkg_url.
  --key_url | -k
    key_url.
  --proxy
    proxy.
EOF
    exit 0
}


function get_ceph_upgrade_pkgs_in_controller() {
    log_dir=/tmp/ceph-upgrade
    rm -rf $log_dir
    echo '----------------begin-----------------------------------------' >$log_dir
    echo "
https_proxy = $PROXY
http_proxy = $PROXY
ftp_proxy = $PROXY
    " > ~/.wgetrc
    echo "Acquire::http::Proxy \"$PROXY\" ;" >> /etc/apt/apt.conf
    rm -rf /opt/ceph_upgrade
    mkdir -p  /opt/ceph_upgrade
    mkdir -p /opt/ceph_upgrade/ceph_repo
    cd /opt/ceph_upgrade
    if [[ -n $PROXY_USER  && -n $PROXY_PWD ]]; then
        wget -q -O- $KEY_URL --proxy-user=$PROXY_USER --proxy-password=$PROXY_PWD | sudo apt-key add -
    else
        wget -q -O- $KEY_URL | sudo apt-key add -
    fi
    echo deb $PKG_URL $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list;
    echo '----------------ceph.list build success-------------------------' >>$log_dir;
    rm -rf /var/lib/dpkg/info-bak;
    mv /var/lib/dpkg/info/ /var/lib/dpkg/info-bak;
    mkdir -p /var/lib/dpkg/info;
    echo '----------------apt-get update begin--------------------------' >>$log_dir;
    apt-get update;
    echo '----------------apt-get update over and upgrade ceph begin----' >>$log_dir;
    exp_ceph-common_upgrade >>$log_dir;
    exp_ceph_upgrade >>$log_dir ;
    exp_ceph-mds_upgrade >>$log_dir ;
    echo '----------------upgrade ceph over-----------------------------' >>$log_dir;
    cp /var/cache/apt/archives/*.deb /opt/ceph_upgrade/ceph_repo/
    cd /opt/ceph_upgrade/
    dpkg-scanpackages ceph_repo | gzip > ceph_repo/Packages.gz
    for node in `echo "$STORAGE_NODE_LIST"|sed "s/,/ /g"`;do ssh $node "rm -rf /opt/ceph_repo";done
    for node in `echo "$STORAGE_NODE_LIST"|sed "s/,/ /g"`;do scp -r /opt/ceph_upgrade/ceph_repo $node:/opt/;done
}

function build_ceph_upgrade_repo() {
    rm -rf /etc/apt/sources.list.d/ceph-uprage.list
    echo deb file:///opt ceph_repo/ > /etc/apt/sources.list.d/ceph-uprage.list
}


function ceph-upgrade-node() {
    build_ceph_upgrade_repo
    log_dir=/tmp/ceph-upgrade
    rm -rf $log_dir
    echo '----------------begin-----------------------------------------' >$log_dir
    rm -rf /var/lib/dpkg/info-bak;
    mv /var/lib/dpkg/info/ /var/lib/dpkg/info-bak;
    mkdir -p /var/lib/dpkg/info;
    echo '----------------apt-get update begin--------------------------' >>$log_dir;
    apt-get update;
    echo '----------------apt-get update over and upgrade ceph begin----' >>$log_dir;
    exp_ceph-common_upgrade >>$log_dir;
    exp_ceph_upgrade >>$log_dir ;
    exp_ceph-mds_upgrade >>$log_dir ;
    echo '----------------upgrade ceph over-----------------------------' >>$log_dir;
    sed -i "s/root=default/root=vsm/g" /usr/bin/ceph-crush-location;
    echo '-----------------over-----------------------------------------' >>$log_dir ;

}





#---------------------------------------------
# Read Parameters.
#---------------------------------------------

parameter_count=$#
parameters=$*

PKG_URL=""
KEY_URL=""
PROXY=""
PROXY_USER=""
PROXY_PWD=""
STORAGE_NODE_LIST=""
while [ $# -gt 0 ]; do
  case "$1" in
    -h) usage ;;
    --help) usage ;;
    -p | --pkg_url) shift;echo $1;PKG_URL=$1 ;;
    -k | --key_url) shift;KEY_URL=$1  ;;
    -s | --storages) shift;STORAGE_NODE_LIST=$1  ;;
    --proxy) shift;PROXY=$1  ;;
    --username) shift;PROXY_USER=$1  ;;
    --password) shift;PROXY_PWD=$1  ;;
    *) shift ;;
  esac
  shift
done

if [[ -n $STORAGE_NODE_LIST  && -n $KEY_URL  && -n $PKG_URL   ]]; then
        get_ceph_upgrade_pkgs_in_controller
else
        ceph-upgrade-node
fi

set +o xtrace

